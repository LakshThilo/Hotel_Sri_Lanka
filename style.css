@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700;800&display=swap');

/* ==================== Common Styles ==================== */
* {

    /* */
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: "Vollkorn", serif;
    list-style-type: none; /*get rid  of default bullet from list */
    text-decoration: none; /*  remove default link styles*/
    outline: none;   /* get rid of default outline */

}

/*the font size of the HTML elemtn is equals to 16 pixels, here i've convert one rem into 10 pixels,
 so for that we have to decrease the font sizee of the HTML element*/
 html {
     font-size: 62.5%;

 }

 /* creating CSS variable for colors*/
 :root {
     --primary-color: #2b81e4;
     --secondary-color: #eee;
     --white-color: #fff;
     --grey-color: #555;
     --light-grey-color: #777;
 }

 /* throughout the project going to use flexbox to manage layout in most cases we'll need to center element perfectly*/
 .center {

    display: flex;
    justify-content: center;
    align-items: center;

 }

 .container {

    background-color: var(--secondary-color);
    margin: 3.5rem;
    box-shadow: 0 1rem 3rem var(--grey-color);
    /* removing scroll bar from the container(image-animation) */
    overflow: hidden;
 }

 /* ====================End of Common Styles ==================== */


  /* ====================Navbar ==================== */
   
  /* this class belong to both button */
  .navbar-icon {

   width: 5.5rem;
   height: 5.5rem;
   background-color: var(--white-color);
   border-radius: 50%; /* makeing both button rounded*/
   cursor: pointer;

   flex-direction: column;
  } 

  /* circle button */
  .open-navbar-icon {
   
   position: fixed;
   top: 5.5rem;
   left: 5.5rem;
   background-color: var(--white-color);
   z-index: 400; /* to bring the button top of the other elements*/
  
  }



  /* adding lines to the circle */
  .navbar-icon .line {
      height: 0.2rem;
      width: 3.5rem;
      background-color: var(--light-grey-color);
      /* right now item placed in top of the each other we need some 
      space between them and also have to place them center of the item
      can use pre define center class to both button*/

      /* after that we need to make flex direction in .navbar-icon, becuse 
      flex flags aligns the Flex item horizontally in row by default*/
  }



  /* adding space between the line */
  .open-navbar-icon .line{
      margin: 0.3rem 0;
  }



  .navbar-wrapper {
      
      /* display: none; 
      to work with other elements need to display none, then wrapper will take up the
      entire viewport */
      width: 100vw;
      height: 100vh;
      background-color: rgba(255, 255, 255, 0.7);
      position: fixed;
      left: 0;
      top: 0;
      z-index: 300;
      
      /* still we got small issue on the right side so that padding on the right need to increase need to add like this*/
      padding: 3.5rem  5.2rem 3.5rem 3.5rem;

      /* move this to bottom and opacity 0*/
      bottom: -100%;
      opacity: 0;

      transition: bottom 0.5s, opacity 0.2s;
  }

  .change .navbar-wrapper{

   bottom: 0;
   opacity: 1;
   transition: bottom 0.5s, opacity 0.2s .25s;
   }

  .navbar{

   width: 100%;
   height: 100%;
   background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.3)), url(images/navbar-bg.jpg) center no-repeat;
   background-size: cover;
   position: relative;

   /* now the view port takes up the entire width and height of the view port 
   we need to add some space around it like it's in case of the header lets
   remember the amount of space on each side equals to 3.5rem so therefor nedd to
   define padding in .navbar-wrapper */

   /* to make the item hidden while they are placed up for that i'm going to use */
   overflow:hidden


}

/* closing navbar icone- need to place this top right corner and in order to place 
                         this icon according to its parent element lets assign 
                          parent position-relative(navbar)    */
.close-navbar-icon {

   position: absolute;
   top: 2.5rem;
   right: 3.0rem;
   z-index: 300;
}

.close-navbar-icon .line{ 

   position: absolute;

}

.line-1 {
   transform: rotate(40deg);
}

.line-2 {
   transform: rotate(-40deg);
}


.nav-list {
   height: 100%;

   display: flex;
}

.nav-link{

   font-size: 3rem;
   font-weight: 700;
   color: var(--white-color);
   text-transform: uppercase;
   
   width: 100%;
   /* now need to define background color for each navigation item we can do it from CSS
   using nth: pseudo class and assign them to different background color but we do it 
   using JavaScript*/

   /* make item center add css class center to each item */

   opacity: 0.8;

   /* now we need to place navigatiion button up because once we click the menu item they should move from top to buttom
   for tat lets assign nav-link postion-rel and top -100%*/
   position: relative;
   top:-100%
}

.change .nav-link{

   top: 0;
}

.change .nav-link:nth-child(1){
   transition: top 1s .4s, opacity .3s, color .3s;
}

.change .nav-link:nth-child(2){
   transition: top 1s .6s, opacity .3s, color .3s;
}

.change .nav-link:nth-child(3){
   transition: top 1s .8s, opacity .3s, color .3s;
}

.change .nav-link:nth-child(4){
   transition: top 1s 1s, opacity .3s, color .3s;
}

.change .nav-link:nth-child(5){
   transition: top 1s 1.2s, opacity .3s, color .3s;
}

/* addinghover effect to nav */
.nav-link:hover {

   opacity: 1;
   color: var(--primary-color);
   transition: all 0.3s;

}


/* now we need to make the button work so by default upper wrapper down below
and make hidden for for that lets change the value of bottom for an upper wrapper and make it minus */



  /* ====================Navbar ==================== */


  /* ====================Header ==================== */
 .header{

    width: 100%;
    height: calc(100vh - 7rem); /* substract 100 viewport height 7, (100% height = 100vh)*/
    background:linear-gradient(rgba(18, 113, 255, 0.5), rgba(18, 113, 255, 0.3)), url(images/header-bg.jpg)  center no-repeat;
    background-size: cover;
    position: relative;

    /* for image - generally prespective property defines how far the object is away from the user the 
    lower value will create a more intensive 3d effect so in our case we need a little bit higher value
    so assign -> the need to use CSS keyframes */
    perspective: 100rem;
 }

 /* adding common styles to the parent of*/
  .header-text {
    text-align: center;
    text-transform: uppercase;
    letter-spacing: 0.1rem;
 }

 .heading {

    font-size: 6rem;
    color: var(--white-color);
 }

 .header-paragraph {

    font-size: 3rem;
    font-weight: 500;
    color: var(--secondary-color);
    /*because elements streched too much there have to use max-width*/
    max-width: 70rem;
    margin: auto;
 } 

 /* next need to position of the header relative becase we need to define the position of 
 of the logo according to its parent element*/
 .logo {

   position: absolute;
   top: 4rem;
   right: 4rem;
 }

  /* to display letters hotisontally */
  .logo h1 {

   display: flex;
 }

 .logo h1 span{ 

   font-size: 2rem;
   font-weight: 900;
   color: var(--primary-color);
   text-transform: uppercase;
   background-color: var(--white-color);
   width: 3.5rem;
   height: 3.5rem;
/* width and height doesnt apply for letters the reason is that sapn element is inline 
   there for we cant not declaer width and height for inline element
   - so need to make them block level element*/
   /* display: block; */
   margin: 0.5rem;
   border-radius: 50%;

/* after this letters will display virtically in a column becase that is 
   default behavior for block level element */
 }



/* Creating animation */
.logo h1 span:nth-child(1){

   /* long way */
   animation-name: drop-letters;
   animation-duration: 5s;
   animation-delay: 0.1s;
   animation-iteration-count: infinite;

}

.logo h1 span:nth-child(2){
   /* short hand way */
   animation: drop-letters 5s 0.2s infinite;
}

.logo h1 span:nth-child(3){
   /* short hand way */
   animation: drop-letters 5s 0.3s infinite;
}

.logo h1 span:nth-child(4){
   /* short hand way */
   animation: drop-letters 5s 0.4s infinite;
}

.logo h1 span:nth-child(5){
   /* short hand way */
   animation: drop-letters 5s 0.5s infinite;
}

.logo h1 span:nth-child(6){
   /* short hand way */
   animation: drop-letters 5s 0.6s infinite;
}


.logo h1 span:nth-child(7){
   /* short hand way */
   animation: drop-letters 5s 0.7s infinite;
}

/* CSS rules for animation */
@keyframes drop-letters{

   0% {
      transform: translateY(0);
   }

   10% {
      transform: translateY(0);
   }

   15% {
      transform: translateY(-100%);
   }

   20% {
      transform: translateY(0);
   }

   100% {
      transform: translateY(0);
   }
}

/* adding animation to image- for this we need to add 3D environment and for 
that we have property call prespective which we need to assign to the header*/

.header-image {
   width: 35%;
   /* negative value move away object to the user (image will placed deep inside the element)*/
   /* transform: translateZ(-400rem); */

   /* addning animation to image */
   animation: image-float 150s infinite;
}

@keyframes image-float{

   /* need to move the image using the trasfrom with traslate Z function it allow us to move  
   the object in 3d - positive value move object close to the user*/
   0% {
      transform: translateZ(40rem);
      opacity: 1;
   }

   40% {
      /* balloon need to move little bit right side  so need to use traslate X function too*/
      transform: translateZ(-500rem) 
      translateX(150rem);
      opacity: 0.8;
   }

   70%{

      transform: translateZ(-1500rem) 
      translateX(800rem);
      opacity: 0.6;
   }

   
   80%{

      transform: translateZ(-50rem) 
      translateX(100rem);
      opacity: 0.8;
   }

   100%{

      transform: translateZ(40rem);
      opacity: 1;
   }
}

 /* ====================End of Header ==================== */

 .popular-tours {

   padding:5rem 0 10rem 0;
 }

.popular-tours-heading {

   font-size: 8rem;
   text-align: center;
   margin-bottom:8rem ; /* adding space to bottom */
   color: var(--primary-color); /* adding color */
   text-shadow: 0 0.1rem 0.2rem var(--primary-color);  /* adding shadow to the text */
 }

 .cards-wrapper {

      display: flex;
    /* in order to create even space between the card, use justify-content: space-evenly; */
      justify-content: space-evenly;
   }

   .card {
      width: 35rem;
      position: relative;
      /* adding 3D environment to cards */
      perspective: 150rem;
      /* then we need to  move the back side*/
      z-index: 200;

   }

   .card-image {
      width: 100%;
      border-radius: 0.3rem 0.3rem 0 0;
   }

   .font-side {

      text-align: center;
      background-color: var(--white-color);
      border-radius: 0.3rem;
      position: relative;
      z-index: 10;
      /* The opacity property specifies the opacity/transparency of an element. */
      opacity: 0.9;
      transition: opacity 0.4s, transform 0.4s, box-shadow 0.4s;
   }

   /* child selectors - child selector select all element that 
   are the children of a specified element once we click the button the the card
   will get a new class change and this entire selection will be valid*/

   /* both sides will exchange their positions, shadows, opasities and the z-dex property*/
   .change > .font-side {
      transform:  translateZ(-5rem) translateX(3rem);
      box-shadow: 0 2rem 4rem #777;
      opacity: 0.5;
      z-index: 0;

   }

   .tour-name {

      font-size: 2.5rem;
      font-weight: 700;
      text-transform: uppercase;
      position: absolute;
      top: 30%;
      right: 1.5rem;
      color: var(--white-color);
      text-shadow: 0 0 1rem black;
   }

   /*list*/
   .card-list{

      width: 80%;
      /* in order to Center the list we need to use margin auto  */
      margin: auto;
      padding: 2rem 0 3rem 0;
      
      

   }

/*list -items*/
   .card-list-item {
      font-size: 1.6rem;
      font-weight: 500;
      color: var(--light-grey-color);
      margin: 2rem 0;
      border-bottom: 1px solid var(--primary-color);
      padding-bottom: 1.5rem;
   }

/*back-side*/
/*make position absolute then in order to possion according to the card*/
   .back-side {
      position: absolute;
      top: 0;
      background-color: var(--primary-color);
      /* to expand it to the entire card, need to  */
      width: 100%;
      height: 100%;
      border-radius: 0.3rem;
      box-shadow: 0 2rem 4rem #777;
      flex-direction: column;
      /* move back card and move right */
      transform: translateZ(-5rem); 
      transform: translateX(2rem);
      opacity: 0.5;
      transition: opacity 0.4s, transform 0.4s, box-shadow 0.4s;
   }

   .change > .back-side {
      transform:  translateZ(0) translateX(3rem);
      box-shadow: 0 .5rem 2rem #aaa;
      opacity: 0.9;

   }


   .tour-price {
      font-size: 5rem;
      font-weight: 300;
      color: var(--white-color);
      margin-bottom: 3rem;

   }

   .card-button {
      color: var(--primary-color);
      background-color: var(--white-color);
      border: none;
      font-size: 2.5rem;
      padding: 1rem 2rem;
      letter-spacing: 2rem;
      border-radius: 5rem;
      cursor: pointer;
   }

   .navigation-button {
      position: absolute;
      top: 0.5rem;
      left: 0.5rem;
      padding: 0.5rem;
      background-color: rgba(255, 255, 255, 0.8);
      color: var(--light-grey-color);
      border-radius: 0.3rem;
      border: none;
      font-size: 1.5rem;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.2rem;
      cursor: pointer;
   }
  /* ====================Populer Tour ==================== */

  /* ==================Stories ==================== */

  .stories{

       padding:10rem 0;
       position: relative;
  }

  
  /* video */
  .video-container{
   position: absolute; /* need to postion this according to parent that means parent need position with ralative*/
   top: 0;
   left: 0;
   width: 100%;
   height: 100%;
   opacity: 0.4;
   
}

.bg-video{
   width: 100%;
   height: 100%;
   object-fit: cover;
}

  .stories-wrapper{  
   /* I'm going to place stories in the middle of this section and they should be placed 
     virtically for that let's use Flexbox. in general display flex align elemnt side by 
     side hotisontally there for we have to change the direction and maje it column */
      display: flex;
      flex-direction: column;
      align-items: center;  /* in order to Center the element the item  */

  }

  .story-bg{
     background-color: rgba(238, 238, 238, 0.85); 
     padding: 5rem;
     margin: 5rem;
     width: 70%;
     box-shadow: 0 2rem 5rem rgba(51, 51, 51, 0.4);

     /* the shape of the back ground is different in the final project it is skewed and going to 
     achive that using transform with skew X function, this allow us to skew 
     the elemnt according to the x axis*/
     transform: skew(20deg);

     /* after adding this skew to the section this will apply to the content as well 
     in order to fix that we can skew the sroty itself back by the same degree in story*/

  }

  .story{
   transform: skew(-20deg);
   display: flex; /* place image and text side by side */

  }



  .story-image{
   width: 20rem;
   height: 20rem;
   border-radius: 50%;
   object-fit: cover;  /* The CSS object-fit property is used to specify how an <img> or <video> should be resized to fit its container. */
   margin-right: 5rem;
  }

  .story-text{
     letter-spacing: .1rem;
     /* in order to indent the paragraph, need to select its first element
     for that we need to use psedo element call fist LETTER*/
  }

  .story-heading {

      font-size: 2.5rem;
      text-transform: uppercase;
      color: var(--grey-color);
      margin-bottom: 1rem;

  }

  .story-paragraph{
      font-size: 1.8rem;
      color: var(--light-grey-color);
   /* need to add two mare thing, indent the paragraph a little bit and also 
   create a space between the letters, between the letter of heading and paragraph as well
   so need select the parent element which is story-text*/
  }

  /* adding Indent to the first letter */
  .story-paragraph::first-letter{
     margin-left:1rem ;

  }
  /* ==================End of Stories =============== */


  /* ================== Contact =============== */

  .contact{

      padding: 15rem 0 20rem 0;
      text-align: center;
      background: url(images/contact-us-bg.png) center no-repeat;
      background-size: cover;
      animation: contact-bg 35s infinite;
      
  } 

  .contact-heading {

   font-size: 7rem;
   font-weight: 700;
   text-transform: uppercase;
   letter-spacing: .5rem;
   color: var(--white-color);
   text-shadow: 0 1rem 2rem #000;
   margin-bottom: 8rem;

  }

  .contact-form {

   width: 70rem;
   height: 50rem;
   background-color: rgba(255, 255, 255, 0.95);
   margin: auto; /* to center the form*/

   /* need to center the content of the form for that neet to assign 
   Center to the from element*/

   flex-direction: column; /*to prevent input group side by side- default is horizontal*/

   border-radius: .5rem;
   box-shadow: 0 1rem 3rem #000;
   padding: 5rem;
   border: 1px solid black;

  }

  .input-group{

   width: 100%;
   display: flex;
   flex-direction: column;
   margin: 1rem 0; /* create a space between input group */
   position: relative;
  }

  .input-groups{ 

   width: 100%;
   display: flex; /*  actually we need to place name and email side by side  for that-*/
   justify-content: space-between;
}

  /* adding space to the form*/
  .input-groups .input-group{ 

   width : 48.5%;
   /* then need to assign the input grop justify conetent in groups*/

  }

  /* cutomize input and textarea  */
  .input-group input,
  .input-group textarea {

   padding: 3rem 1rem 1rem 1rem;
   background-color: var(--secondary-color);
   border: 0.1rem solid var(--secondary-color);
   font-size: 1.4rem;
   color: var(--light-grey-color);
   letter-spacing: .1rem;
   border-radius: .5rem;
   transition: border 0.3s;

  }

  /* customixed on facus */
  .input-group input:focus,
  .input-group textarea:focus {
   border: 0.1rem solid #ccc;

  }

  /* labels */
  .input-group label {
     font-size: 1.2rem;
     font-weight: 600;
     text-transform: uppercase;
     letter-spacing: .1rem;
     color: var(--grey-color);
     /* and label should go inside the feilds their for  */
     position: absolute; /*and the need to make parent relative -(input-group)*/
     top: 1rem;
     left: 1rem;
  }

  /* form submit button */
  .form-btn {
      width: 100%;
      padding: 1.3rem;
      font-size: 1.6rem;
      letter-spacing: 0.1rem;
      margin-top: 1rem;
      background-color: var(--light-grey-color);
      color: var(--white-color);
      border-radius: 0.5rem;
      border: none;
      cursor: pointer;
      transition: background-color 0.4s;
  }

  .form-btn:hover { 
      background-color: var(--grey-color);

  }

  /* to prevent increase or decrease the size of text area   */
  .form-textarea {
      max-height: 15rem;
      max-width: 100%;
      min-width: 100%;
      
  }

  /* creating animation - addig color changing effect to the background*/
  @keyframes contact-bg {

   0%{
      background-color: #3d3d3d;
   }

   25% {

      background-color: #ced8e4;
   }

   50% {
      background-color: #1e81f3;
   }

   75% {
      background-color: #ff7842;
   }

   100% {
      background-color: #3d3d3d;
   }
  }
 

  /* Footer */
   .footer{
      background-color: var(--grey-color);
      padding: 4rem 0 2rem 0;
   }

   .footer-list {

      display: flex;
      justify-content: center;


   }

   .footer-link {
      font-size: 2rem;
      color: var(--white-color);
      background-color: var(--grey-color);
      margin: 0 2rem;
      padding: .3rem 3rem;
      letter-spacing: .1rem;
   }

   .footer-link:hover {

      transform: rotate(-10deg);
      box-shadow: 0 2rem 3rem #000;
    }

    .footer-paragraph{
       text-align: center;
       margin-top: 5rem;
       color: var(--white-color);
       font-size: 1.5rem;
       letter-spacing: .2rem;
    }

  /* End of Footer */